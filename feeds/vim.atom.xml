<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Import None</title><link href="https://cassiobotaro.github.io/" rel="alternate"></link><link href="https://cassiobotaro.github.io/feeds/vim.atom.xml" rel="self"></link><id>https://cassiobotaro.github.io/</id><updated>2016-02-11T00:00:00-02:00</updated><entry><title>Corrigindo o vim bootstrap</title><link href="https://cassiobotaro.github.io/corrigindo-o-vim-bootstrap.html" rel="alternate"></link><published>2016-02-11T00:00:00-02:00</published><author><name>Cássio Botaro</name></author><id>tag:cassiobotaro.github.io,2016-02-11:corrigindo-o-vim-bootstrap.html</id><summary type="html">&lt;p&gt;&lt;img alt="logo-vim" src="https://cassiobotaro.github.io/images/vim.png" title="Logo Vim" /&gt;&lt;/p&gt;
&lt;h2&gt;Introdução&lt;/h2&gt;
&lt;p&gt;O intuito deste post é trazer problemas que tive durante a instalação do &lt;a href="https://github.com/avelino/vim-bootstrap"&gt;vim-bootstrap&lt;/a&gt; e a solução dos mesmos.&lt;/p&gt;
&lt;p&gt;Acredito que minhas dúvidas podem ser de outros também.&lt;/p&gt;
&lt;p&gt;Só para referência, sou usuário xubuntu, ou seja, meu ambiente gráfico é o xfce.&lt;/p&gt;
&lt;p&gt;Utilizo o vim na versão 7.4, o git na versão 2.5.0. Estas informações são necessárias pois soluções podem divergir por versão.&lt;/p&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;code&gt;Open github file/line (website), if used git in github&lt;/code&gt; não funciona ?&lt;/h3&gt;
&lt;p&gt;O que acontece é que é necessária mais uma configuração para que este recurso funcione, isto já foi reportado através da issue &lt;a href="https://github.com/avelino/vim-bootstrap/issues/170"&gt;#170&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Primeiro devemos criar/editar o arquivo .gitconfig e adicionar a seguinte configuração.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[alias]&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;! bash -c &amp;#39;git config --get remote.origin.url | sed -E &amp;quot;s/\\\\.git//g&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adicionado esta configuração, por conta do meu ambiente gráfico, é necessário trocar comando no .vimrc para:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;noremap ,o :!echo `git url`/blob/`git rev-parse --abbrev-ref HEAD`/%\#L&amp;lt;C-R&amp;gt;=line(&amp;#39;.&amp;#39;)&amp;lt;CR&amp;gt; \| xargs xdg-open&amp;lt;CR&amp;gt;&amp;lt;CR&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Trocamos o &lt;code&gt;open&lt;/code&gt; por &lt;code&gt;xdg-open&lt;/code&gt; e agora o comando deve funcionar.&lt;/p&gt;
&lt;h3&gt;Copiar e colar na área de transferência do sistema operacional não funciona.&lt;/h3&gt;
&lt;p&gt;O vim-bootstrap faz o mapeamento da combinação de teclas para copia do texto para a área de trasnsferência do sistema operacional através do &lt;code&gt;YY&lt;/code&gt;, porém caso só tenha instalado o pacote vim, ele nao tera a opção +clipboard e este recurso não funciona.&lt;/p&gt;
&lt;p&gt;A solução simples é a instalçao do pacote vim-gtk, ainda que não o utilize diretamente.&lt;/p&gt;
&lt;h3&gt;Ao copiar e colar códigos python, a palavra import  se duplica.&lt;/h3&gt;
&lt;p&gt;Isto é um problema com o plugin jedi para python, e a solução é adição da seguinte linha à configuração:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;let g:jedi#smart_auto_mappings = 0
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Fiz uma configuração com suporte a linguagem GO, mas não parece ter funcionado.&lt;/h3&gt;
&lt;p&gt;Para que o plugin go-vim esteja em perfeito funcionamento, o caminho da variável de ambiente GOPATH, deve estar bem configurado e em um diretório com permissões necessárias.
Minha solução que funciona no ubuntu é a adição das seguintes linhas ao bashrc ou zshrc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;export GOPATH=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="x"&gt;/go&lt;/span&gt;
&lt;span class="x"&gt;export PATH=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="x"&gt;:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GOROOT&lt;/span&gt;&lt;span class="x"&gt;/bin:&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;GOPATH&lt;/span&gt;&lt;span class="x"&gt;/bin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Uma outra ação que pode ser necessária é rodar o comando &lt;code&gt;GoInstallBinaries&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Ao tentar comentar blocos de código em templates html com filetype jinja ou django, a notação de comentário está incorreta.&lt;/h3&gt;
&lt;p&gt;Isto é um problema com o plugin vim-commentary, mas a solução é dita no próprio plugin. O que acontece é que o plugin não reconhece o filetype e não sabe qual sintaxe de comentário destes arquivos.&lt;/p&gt;
&lt;p&gt;A correção é através da adição das seguintes linhas no .vimrc:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;autocmd FileType htmldjango set commentstring={#\ %s\ #}
autocmd FileType jinja set commentstring={#\ %s\ #}
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Conclusão&lt;/h3&gt;
&lt;p&gt;Espero ter ajudado, quem tiver interesse em ver todas as minhas configurações elas estão públicas neste &lt;a href="https://github.com/cassiobotaro/botaro-toolbelt"&gt;repositório&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Também não podia deixar de falar no excelente &lt;a href="https://github.com/cassiobotaro/vimbook.git"&gt;vimbook&lt;/a&gt;, em pt-br, que estou portando para o gitbook, para que em breve tenhamos uma versão .epub, .mobi e .pdf.&lt;/p&gt;
&lt;p&gt;[]'s&lt;/p&gt;</summary><category term="vim"></category><category term="iniciantes"></category></entry></feed>